// Code generated by protoc-gen-go. DO NOT EDIT.
// source: advcalc.proto

package advcalc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name
type PowerRequest struct {
	A                    float64  `protobuf:"fixed64,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    float64  `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PowerRequest) Reset()         { *m = PowerRequest{} }
func (m *PowerRequest) String() string { return proto.CompactTextString(m) }
func (*PowerRequest) ProtoMessage()    {}
func (*PowerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1cafe305e0ad3fa, []int{0}
}

func (m *PowerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PowerRequest.Unmarshal(m, b)
}
func (m *PowerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PowerRequest.Marshal(b, m, deterministic)
}
func (m *PowerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PowerRequest.Merge(m, src)
}
func (m *PowerRequest) XXX_Size() int {
	return xxx_messageInfo_PowerRequest.Size(m)
}
func (m *PowerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PowerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PowerRequest proto.InternalMessageInfo

func (m *PowerRequest) GetA() float64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *PowerRequest) GetB() float64 {
	if m != nil {
		return m.B
	}
	return 0
}

// The response message containing the greetings
type PowerResponse struct {
	Pow                  float64  `protobuf:"fixed64,1,opt,name=pow,proto3" json:"pow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PowerResponse) Reset()         { *m = PowerResponse{} }
func (m *PowerResponse) String() string { return proto.CompactTextString(m) }
func (*PowerResponse) ProtoMessage()    {}
func (*PowerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1cafe305e0ad3fa, []int{1}
}

func (m *PowerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PowerResponse.Unmarshal(m, b)
}
func (m *PowerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PowerResponse.Marshal(b, m, deterministic)
}
func (m *PowerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PowerResponse.Merge(m, src)
}
func (m *PowerResponse) XXX_Size() int {
	return xxx_messageInfo_PowerResponse.Size(m)
}
func (m *PowerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PowerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PowerResponse proto.InternalMessageInfo

func (m *PowerResponse) GetPow() float64 {
	if m != nil {
		return m.Pow
	}
	return 0
}

func init() {
	proto.RegisterType((*PowerRequest)(nil), "advcalc.PowerRequest")
	proto.RegisterType((*PowerResponse)(nil), "advcalc.PowerResponse")
}

func init() { proto.RegisterFile("advcalc.proto", fileDescriptor_e1cafe305e0ad3fa) }

var fileDescriptor_e1cafe305e0ad3fa = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4c, 0x29, 0x4b,
	0x4e, 0xcc, 0x49, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xb4, 0xb8,
	0x78, 0x02, 0xf2, 0xcb, 0x53, 0x8b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x78, 0xb8,
	0x18, 0x13, 0x25, 0x18, 0x15, 0x18, 0x35, 0x18, 0x83, 0x18, 0x13, 0x41, 0xbc, 0x24, 0x09, 0x26,
	0x08, 0x2f, 0x49, 0x49, 0x91, 0x8b, 0x17, 0xaa, 0xb6, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48,
	0x80, 0x8b, 0xb9, 0x20, 0xbf, 0x1c, 0xaa, 0x1c, 0xc4, 0x34, 0xf2, 0xe0, 0xe2, 0x71, 0x4c, 0x29,
	0x4b, 0xcc, 0x4b, 0x4e, 0x4d, 0x71, 0x4e, 0xcc, 0x49, 0x16, 0xb2, 0xe0, 0x62, 0x05, 0x6b, 0x11,
	0x12, 0xd5, 0x83, 0x39, 0x00, 0xd9, 0x3a, 0x29, 0x31, 0x74, 0x61, 0x88, 0xc9, 0x4a, 0x0c, 0x49,
	0x6c, 0x60, 0x87, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xae, 0xa9, 0x9b, 0xb7, 0xb9, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdvancedCalcClient is the client API for AdvancedCalc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdvancedCalcClient interface {
	Power(ctx context.Context, in *PowerRequest, opts ...grpc.CallOption) (*PowerResponse, error)
}

type advancedCalcClient struct {
	cc *grpc.ClientConn
}

func NewAdvancedCalcClient(cc *grpc.ClientConn) AdvancedCalcClient {
	return &advancedCalcClient{cc}
}

func (c *advancedCalcClient) Power(ctx context.Context, in *PowerRequest, opts ...grpc.CallOption) (*PowerResponse, error) {
	out := new(PowerResponse)
	err := c.cc.Invoke(ctx, "/advcalc.AdvancedCalc/Power", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdvancedCalcServer is the server API for AdvancedCalc service.
type AdvancedCalcServer interface {
	Power(context.Context, *PowerRequest) (*PowerResponse, error)
}

// UnimplementedAdvancedCalcServer can be embedded to have forward compatible implementations.
type UnimplementedAdvancedCalcServer struct {
}

func (*UnimplementedAdvancedCalcServer) Power(ctx context.Context, req *PowerRequest) (*PowerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Power not implemented")
}

func RegisterAdvancedCalcServer(s *grpc.Server, srv AdvancedCalcServer) {
	s.RegisterService(&_AdvancedCalc_serviceDesc, srv)
}

func _AdvancedCalc_Power_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvancedCalcServer).Power(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/advcalc.AdvancedCalc/Power",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvancedCalcServer).Power(ctx, req.(*PowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdvancedCalc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "advcalc.AdvancedCalc",
	HandlerType: (*AdvancedCalcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Power",
			Handler:    _AdvancedCalc_Power_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "advcalc.proto",
}
